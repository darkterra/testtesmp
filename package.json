{
  "name": "CheckInAPI",
  "version": "0.1.0",
  "description": "Prise De Service API",
  "author": "Jérémy Young <jeremy.young.pro@gmail.com>",
  "contributors": [
    "Yohan Levy <yohanlevy@groupebsl.com>"
  ],
  "main": "server.js",
  "private": false,
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://bitbucket.org/bslproject/check-in-api"
  },
  "keywords": [
    "express",
    "node",
    "node.js",
    "mongodb",
    "mongoose",
    "es6",
    "es7",
    "es8",
    "es2017",
    "mocha",
    "istanbul",
    "nyc",
    "eslint",
    "Travis CI",
    "coveralls",
    "REST",
    "API",
    "PDS",
    "Prise De Service",
    "BSL"
  ],
  "dependencies": {
    "bcryptjs": "2.4.3",
    "body-parser": "^1.17.0",
    "colors": "^1.1.2",
    "compression": "^1.6.2",
    "config": "^1.30.0",
    "cors": "^2.8.3",
    "express": "^4.15.2",
    "express-validation": "^1.0.2",
    "helmet": "^3.5.0",
    "http-status": "^1.0.1",
    "lodash": "^4.17.4",
    "luxon": "^0.5.3",
    "mongoose": "^5.0.7",
    "morgan": "^1.8.1",
    "pm2": "^2.10.1",
    "preact": "^8.2.7",
    "preact-compat": "^3.18.0",
    "react-geolocated": "^2.3.0",
    "superagent": "^3.8.2",
    "v8-profiler": "^5.7.0"
  },
  "devDependencies": {
    "apidoc": "^0.17.5",
    "babel-core": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-preact": "^1.1.0",
    "chai": "^4.1.0",
    "chai-as-promised": "^7.1.1",
    "coveralls": "^3.0.0",
    "css-mqpacker": "^6.0.2",
    "eslint": "^4.2.0",
    "eslint-config-airbnb-base": "^12.0.1",
    "eslint-plugin-import": "^2.2.0",
    "gulp": "^3.9.1",
    "gulp-clean": "^0.4.0",
    "gulp-copy": "^1.1.0",
    "gulp-docco": "0.0.4",
    "gulp-if": "^2.0.2",
    "gulp-ignore": "^2.0.2",
    "gulp-image": "^4.3.0",
    "gulp-image-resize": "^0.13.0",
    "gulp-jsdoc3": "^1.0.1",
    "gulp-load-plugins": "^1.5.0",
    "gulp-webp": "^3.0.0",
    "husky": "^0.14.3",
    "image-size": "^0.6.2",
    "joi": "^13.1.2",
    "mocha": "^5.0.1",
    "node-sass": "^4.7.2",
    "nodemon": "^1.17.1",
    "nyc": "^11.4.1",
    "parcel-bundler": "^1.6.2",
    "run-sequence": "^2.2.1",
    "shelljs": "^0.8.1",
    "sinon": "^4.4.2",
    "sinon-chai": "^2.10.0",
    "supertest": "^3.0.0"
  },
  "alias": {
    "react": "preact-compat",
    "react-dom": "preact-compat"
  },
  "scripts": {
    "precommit": "npm lint",
    "prestart": "npm docs",
    "start": "node ./server.js",
    "addLibs": "./node_modules/gulp/bin/gulp.js",
    "dev:front": "npm run addLibs && ./node_modules/.bin/parcel -d ./app/dist/ app/views/index.html",
    "build:front": "npm run addLibs && ./node_modules/.bin/parcel build -d ./app/dist/ --public-url / app/views/index.html",
    "lint": "eslint **/*.js --ignore-path .gitignore --ignore-pattern internals/scripts",
    "lint:fix": "npm lint -- --fix",
    "lint:watch": "npm lint -- --watch",
    "test": "NODE_ENV=test nyc --reporter=html --reporter=text mocha --timeout 20000 --recursive src/api/tests",
    "test:unit": "NODE_ENV=test mocha src/api/tests/unit",
    "test:integration": "NODE_ENV=test mocha --timeout 20000 src/api/tests/integration",
    "test:watch": "NODE_ENV=test mocha --watch src/api/tests/unit",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "postcoverage": "opn coverage/lcov-report/index.html",
    "validate": "npm lint && npm test",
    "postpublish": "git push --tags",
    "deploy": "node ./scripts/deploy.js",
    "deploy:int": "node ./scripts/deploy.js",
    "deploy:staging": "node ./scripts/deploy.js",
    "deploy:prod": "node ./scripts/deploy.js",
    "docs": "apidoc -i src -o docs",
    "postdocs": "opn docs/index.html",
    "docker:start": "NODE_ENV=production node ./server.js",
    "docker:test": "docker-compose -f docker-compose.yml -f docker-compose.test.yml up --abort-on-container-exit",
    "docker:dev": "npm run build:front && sudo docker-compose -f docker-compose.yml -f docker-compose.dev.yml build && sudo docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "docker:prod": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up"
  },
  "engines": {
    "node": ">=9.7.0",
    "npm": "5.6.0"
  }
}
